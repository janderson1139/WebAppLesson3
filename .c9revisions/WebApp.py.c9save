{"ts":1377086357507,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"import webapp2\nimport cgi\nimport string\nfrom string import maketrans\nimport re\nfrom google.appengine.api import urlfetch\nimport jinja2\nimport os\n\nfrom google.appengine.ext import db\n\n\ndef escape_html(s):\n    return cgi.escape(s, quote = True)\n\njinja_environment = jinja2.Environment(autoescape=True,\n    loader=jinja2.FileSystemLoader(os.path.join(os.path.dirname(__file__), 'HTML')))\n\nclass Post(db.Model):\n    subject = db.StringProperty(required = True)\n    content = db.TextProperty(required = True)\n    created = db.DateTimeProperty(auto_now_add = True)\n\n\nclass MainPage(webapp2.RequestHandler):\n    def write_form(self):\n        template_values = {}\n        posts = db.GqlQuery(\"select * from Post ORDER BY created DESC\")\n        template_values['posts'] = posts\n        template = jinja_environment.get_template('index.html')\n        self.response.out.write(template.render(template_values))\n    def get(self):\n        self.write_form()\nclass NewPost(webapp2.RequestHandler):\n    def write_form(self, subject = \"\", content = \"\", error=\"\"):\n        template_values = {}\n        template_values['subject']=subject\n        template_values['content']=content\n        template_values['error']=error\n        \n        template = jinja_environment.get_template('newpost.html')\n        self.response.out.write(template.render(template_values))\n    def get(self):\n        self.write_form()\n    def post(self):\n        subject = self.request.get(\"subject\")\n        content = self.request.get(\"content\")\n\n        if subject and content:\n            newpost = Post(subject = subject, content = content)\n            newpost.put()\n            self.redirect(\"/\")\n        else:\n            error = \"we need both a subject and some content please\"\n            self.write_form(subject=subject, content = content, error = error)\n\napplication = webapp2.WSGIApplication([('/', MainPage),('/newpost', NewPost) ],\n                             debug=True)\n"]],"start1":0,"start2":0,"length1":0,"length2":1938}]],"length":1938}
{"contributors":[],"silentsave":false,"ts":1377087075190,"patch":[[{"diffs":[[0,"= True)\n"],[1,"class PermaLink(webapp2.RequestHandler):\n    def get(self):\n        self.response.out.write(\"itworkeds!\")"],[0,"\n\nclass "]],"start1":551,"start2":551,"length1":16,"length2":121},{"diffs":[[0,"NewPost)"],[1,",('/\\d{4}', PermaLink"],[0," ],\n    "]],"start1":1990,"start2":1990,"length1":16,"length2":37}]],"length":2064,"saved":false}
{"ts":1377087238810,"patch":[[{"diffs":[[0,"ermaLink"],[1,")"],[0," ],\n    "]],"start1":2011,"start2":2011,"length1":16,"length2":17}]],"length":2065,"saved":false}
